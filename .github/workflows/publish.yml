name: Publish
on:
  push:
    branches: [ "publish" ]
    tags: [ "*" ]
  
jobs:
  publish-mingw:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: oprypin/find-latest-tag@v1
        id: gettag
        with:
          repository: PerryWerneck/lib3270
          releases-only: true
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: dos2unix mingw-w64-x86_64-gcc mingw-w64-x86_64-meson mingw-w64-x86_64-iconv pkgconf mingw-w64-x86_64-gettext gettext-devel mingw-w64-x86_64-openssl
      - name: CI-Build
        run: |
          dos2unix PKGBUILD.mingw
          makepkg BUILDDIR=/tmp/pkg -p PKGBUILD.mingw
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.gettag.outputs.tag }}
          artifacts: "*3270*.pkg.tar.zst"
          allowUpdates: true
          draft: false
          makeLatest: true
          omitBody: true
          omitPrereleaseDuringUpdate: true
          replacesArtifacts: true
  publish-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: oprypin/find-latest-tag@v1
        id: gettag
        with:
          repository: PerryWerneck/lib3270
          releases-only: true
      - name: Install Pre reqs
        run: |
          brew update
          brew install xz meson ninja curl gettext openssl pkgconfig
          brew upgrade
      - name: build
        run: |
          export PKG_CONFIG_PATH="$(brew --prefix curl)/lib/pkgconfig:$(brew --prefix openssl)/lib/pkgconfig"
          meson setup --prefix=/lib3270/${{ steps.gettag.outputs.tag }} .build       
          meson compile -C .build
      - name: package
        run: |
          DESTDIR=${PWD}/.bin/package meson install -C .build
          tar --create --xz --file=macos-lib3270.tar.xz --directory=${PWD}/.bin/package --verbose .
      - name: upload
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.gettag.outputs.tag }}
          artifacts: "macos-lib3270.tar.xz"
          allowUpdates: true
          draft: false
          makeLatest: true
          omitBody: true
          omitPrereleaseDuringUpdate: true
          replacesArtifacts: true
