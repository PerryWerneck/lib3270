#
# "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
# (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
# aplicativos mainframe. Registro no INPI sob o nome G3270.
#
# Copyright (C) <2008> <Banco do Brasil S.A.>
#
# Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
# os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
# Free Software Foundation.
#
# Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
# GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
# A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
# obter mais detalhes.
#
# Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
# programa;  se  não, escreva para a Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA, 02111-1307, USA
#
# Contatos:
#
# perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
# erico.mendonca@gmail.com	(Erico Mascarenhas de Mendonça)
#

#---[ Paths ]----------------------------------------------------------------------------

prefix=@prefix@
exec_prefix=@exec_prefix@
srcdir=@srcdir@
bindir=@bindir@
srcdir=@srcdir@
sbindir=@sbindir@
libdir=@libdir@
includedir=@includedir@
datarootdir=@datarootdir@
localedir=@localedir@
docdir=@docdir@
sysconfdir=@sysconfdir@
datadir=$(datarootdir)/$(PRODUCT_NAME)
confdir=$(sysconfdir)/$(PRODUCT_NAME)

#---[ Library configuration ]------------------------------------------------------------

SONAME=@SONAME@
PACKAGE_NAME=@PACKAGE_NAME@
LIBNAME=lib@LIB3270_NAME@
PRODUCT_NAME=@PRODUCT_NAME@
INSTALL_PACKAGES=@INSTALL_PACKAGES@

NETWORK_MODULES=default openssl

SOURCES= \
	$(wildcard $(srcdir)/src/core/*.c) \
	$(wildcard $(srcdir)/src/core/keyboard/*.c) \
	$(wildcard $(srcdir)/src/core/actions/*.c) \
	$(wildcard $(srcdir)/src/core/toggles/*.c) \
	$(wildcard $(srcdir)/src/core/charset/*.c) \
	$(wildcard $(srcdir)/src/core/ft/*.c) \
	$(wildcard $(srcdir)/src/core/@OSNAME@/*.rc) \
	$(wildcard $(srcdir)/src/core/@OSNAME@/*.c) \
	$(wildcard $(srcdir)/src/core/properties/*.c) \
	$(wildcard $(srcdir)/src/selection/*.c) \
	$(wildcard $(srcdir)/src/network_modules/*.c) \
	$(BUILDDIR)/.tmp/$(LIBNAME)/fallbacks.c \
	$(foreach MODULE, $(NETWORK_MODULES), $(wildcard $(srcdir)/src/network_modules/$(MODULE)/*.c))

TEST_SOURCES= \
	$(wildcard $(srcdir)/src/testprogram/*.c)

#---[ Tools ]----------------------------------------------------------------------------

CC=@CC@
HOST_CC=@HOST_CC@
LD=@CC@
LN_S=@LN_S@
MKDIR=@MKDIR_P@
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
XGETTEXT=@XGETTEXT@
MSGCAT=@MSGCAT@
WINDRES=@WINDRES@
AR=@AR@
VALGRIND=@VALGRIND@
ZIP=@ZIP@
DOXYGEN=@DOXYGEN@
DLLTOOL=@DLLTOOL@
STRIP=@STRIP@

#---[ Build Paths ]----------------------------------------------------------------------

BUILDDIR=@BUILDDIR@

POTDIR=$(BUILDDIR)/.pot

OBJDIR=$(BUILDDIR)/.obj/@OSNAME@
OBJDBG=$(OBJDIR)/Debug
OBJRLS=$(OBJDIR)/Release

BINDIR=$(BUILDDIR)/.bin
BINDBG=$(BINDIR)/Debug
BINRLS=$(BINDIR)/Release

#---[ Rules ]----------------------------------------------------------------------------

CFLAGS= \
	@CFLAGS@ \
	-g \
	-Isrc/include \
	-I$(srcdir)/src/include \
	-I$(srcdir)/src/include/@OSNAME@ \
	@LIBSSL_CFLAGS@ \
	@LDAP_CFLAGS@ \
	@LIBCURL_CFLAGS@

LDFLAGS= \
	@LDFLAGS@

LIBS= \
	@LIBS@ \
	@LIBSSL_LIBS@ \
	@LIBICONV@ \
	@INTL_LIBS@ \
	@LDAP_LIBS@ \
	@LIBCURL_LIBS@

#---[ Debug Rules ]----------------------------------------------------------------------

$(OBJDBG)/%.o: \
	%.c
	
	@echo $< ...
	@$(MKDIR) $(dir $@)

	@$(CC) \
		$(CFLAGS) \
		-DDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CC) \
		$(CFLAGS) \
		-Wall -Wextra -fstack-check \
		-DDEBUG=1 \
		-o $@ -c $<

$(OBJDBG)/%.o: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(dir $@)
	@$(WINDRES) $< -O coff -o $@

#---[ Release Rules ]--------------------------------------------------------------------

$(OBJRLS)/%.o: \
	%.c

	@echo $< ...
	@$(MKDIR) $(dir $@)

	@$(CC) \
		$(CFLAGS) \
		-DNDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CC) \
		$(CFLAGS) \
		-DNDEBUG=1 \
		-o $@ -c $<

$(OBJRLS)/%.o: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(dir $@)
	@$(WINDRES) $< -O coff -o $@

#---[ Misc Rules ]-----------------------------------------------------------------------

$(POTDIR)/$(LIBNAME)/%.pot: \
	%.c

	@echo $(notdir $@) ...
	@$(MKDIR) $(dir $@)
	@$(XGETTEXT) \
		--from-code=UTF-8 \
		--language=C \
		--keyword=_ \
		--keyword=N_ \
		--keyword=MSG_:2 \
		--output=$@ \
		$<
	@touch $@

$(POTDIR)/$(LIBNAME)/%.pot: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(dir $@)
	@touch $@

%.dll.a: \
	%.def

	@$(DLLTOOL) \
		--input-def $(BINRLS)/$(LIBNAME).def \
		--dllname $(LIBNAME).dll \
		--kill-at \
		--output-lib $@

install-%: \
	%/Makefile

	@$(MAKE) -C `dirname $<` DESTDIR=$(DESTDIR) install

#---[ Release Targets ]------------------------------------------------------------------

all: \
	all-@OSNAME@

all-windows: \
	$(BINRLS)/$(SONAME) \
	$(BINRLS)/$(LIBNAME).a \
	locale/$(PACKAGE_NAME).pot \
	$(BINRLS)/$(LIBNAME).delayed.a

	@$(INSTALL_DATA) \
		$(BINRLS)/$(LIBNAME).def \
		$(BUILDDIR)/win

all-linux: \
	$(BINRLS)/$(SONAME) \
	$(BINRLS)/$(LIBNAME).a \
	locale/$(PACKAGE_NAME).pot

all-macos: \
	$(BINRLS)/$(SONAME) \
	$(BINRLS)/$(LIBNAME).a \
	locale/$(PACKAGE_NAME).pot

Release: \
	$(BINRLS)/$(SONAME) \
	$(BINRLS)/$(LIBNAME).a

strip: \
	$(BINRLS)/$(SONAME)

	@$(STRIP) --discard-all $(BINRLS)/$(SONAME)

$(BINRLS)/$(LIBNAME).delayed.a: \
	$(BINRLS)/$(SONAME)

	@$(MKDIR) $(dir $@)
	@echo $< ...

	@$(DLLTOOL) \
		--input-def $(BINRLS)/$(LIBNAME).def \
		--dllname $(LIBNAME).dll \
		--kill-at \
		--output-delaylib $@

$(BINRLS)/$(SONAME): \
	$(foreach SRC, $(basename $(SOURCES)), $(OBJRLS)/$(SRC).o)

	@$(MKDIR) $(dir $@)
	@echo $< ...
	@$(LD) \
		@DLL_LDFLAGS@ \
		-o $@ \
		$(LDFLAGS) \
		$(foreach SRC, $(basename $(SOURCES)), $(OBJRLS)/$(SRC).o) \
		-L$(BINRLS) \
		$(LIBS)

$(BINRLS)/$(LIBNAME).a: \
	$(foreach SRC, $(basename $(SOURCES)), $(OBJRLS)/$(SRC).o)

	@echo $@ ...
	@$(MKDIR) $(dir $@)
	@$(AR) rcs $@ $^


#---[ Install Targets ]------------------------------------------------------------------

install: \
	locale/$(PACKAGE_NAME).pot \
	$(foreach PKG, $(INSTALL_PACKAGES), install-$(PKG))

install-linux-lib: \
	$(BINRLS)/$(SONAME) \
	install-locale

	# Install library
	@$(MKDIR) $(DESTDIR)$(libdir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/$(SONAME) \
		$(DESTDIR)$(libdir)/$(LIBNAME)@DLLEXT@.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@

	# Install default configs
	@mkdir -p $(DESTDIR)$(datarootdir)/pw3270

install-macos-lib: \
	$(BINRLS)/$(SONAME) \
	install-locale

	# Install library
	@$(MKDIR) $(DESTDIR)$(libdir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/$(SONAME) \
		$(DESTDIR)$(libdir)/$(LIBNAME)@DLLEXT@.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@

	# Install default configs
	@mkdir -p $(DESTDIR)$(datarootdir)/pw3270

install-windows-lib: \
	strip \
	$(BINRLS)/$(LIBNAME).dll.a \
	install-locale

	@$(MKDIR) \
		$(DESTDIR)$(bindir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/$(SONAME) \
		$(DESTDIR)$(bindir)/$(SONAME)

install-static: \
	$(BINRLS)/$(LIBNAME).a

	# Install static library
	@$(MKDIR) $(DESTDIR)$(libdir)
	@$(INSTALL_DATA) \
		$(BINRLS)/$(LIBNAME).a \
		$(DESTDIR)$(libdir)/$(LIBNAME).static.a

	@$(MKDIR) $(DESTDIR)$(libdir)/pkgconfig
	@$(INSTALL_DATA) \
		sdk/lib3270-static.pc \
		$(DESTDIR)$(libdir)/pkgconfig/lib3270-static.pc

install-delayed: \
	$(BINRLS)/$(LIBNAME).delayed.a

	# Install static library
	@$(MKDIR) \
		$(DESTDIR)$(libdir)

	@$(INSTALL_DATA) \
		$(BINRLS)/$(LIBNAME).delayed.a \
		$(DESTDIR)$(libdir)

	@$(MKDIR) \
		$(DESTDIR)$(libdir)/pkgconfig

	@$(INSTALL_DATA) \
		sdk/lib3270-delayed.pc \
		$(DESTDIR)$(libdir)/pkgconfig/lib3270-delayed.pc

install-dev: \
	locale/$(PACKAGE_NAME).pot \
	install-@OSNAME@-dev

	@mkdir -p $(DESTDIR)$(includedir)/lib3270

	@$(INSTALL_DATA) \
		$(srcdir)/src/include/@OSNAME@/lib3270/*.h \
		$(DESTDIR)$(includedir)/lib3270

	@$(INSTALL_DATA) \
		$(srcdir)/src/include/lib3270/*.h \
		$(DESTDIR)$(includedir)/lib3270

	@$(INSTALL_DATA) \
		$(srcdir)/src/include/lib3270.h \
		$(DESTDIR)$(includedir)/lib3270.h

	# Install PKG-CONFIG files
	@mkdir -p $(DESTDIR)$(libdir)/pkgconfig
	@$(INSTALL_DATA) \
		sdk/lib3270.pc \
		$(DESTDIR)$(libdir)/pkgconfig/lib3270.pc

	# Install translation files
	@$(MKDIR) $(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/pot
	@$(INSTALL_DATA) locale/$(PACKAGE_NAME).pot $(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/pot

install-linux-dev:

	@$(MKDIR) \
		$(DESTDIR)$(libdir)

	@$(LN_S) \
		$(LIBNAME)@DLLEXT@.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@ \
		$(DESTDIR)$(libdir)/$(LIBNAME)@DLLEXT@

install-macos-dev:

	@$(MKDIR) \
		$(DESTDIR)$(libdir)

	@$(LN_S) \
		$(LIBNAME)@DLLEXT@.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@ \
		$(DESTDIR)$(libdir)/$(LIBNAME)@DLLEXT@

install-windows-dev: \
	$(BINRLS)/$(SONAME) \
	$(BINRLS)/$(LIBNAME).dll.a

	# Install Windows development files
	@$(MKDIR) \
		$(DESTDIR)$(libdir)

	@$(INSTALL_DATA) \
		$(BINRLS)/$(LIBNAME).dll.a \
		$(DESTDIR)$(libdir)

	@$(MKDIR) \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/def

	@$(INSTALL_DATA) \
		$(BINRLS)/$(LIBNAME).def \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/def

	@$(INSTALL_DATA) \
		win/lib3270.mak \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/def

	@rm -f $(DESTDIR)$(libdir)/$(LIBNAME)@DLLEXT@
	@$(LN_S) \
		$(bindir)/$(LIBNAME)@DLLEXT@ \
		$(DESTDIR)$(libdir)/$(LIBNAME)@DLLEXT@
	

#---[ Misc Targets ]---------------------------------------------------------------------

$(BUILDDIR)/.tmp/$(LIBNAME)/fallbacks.c: \
	$(srcdir)/src/core/X3270.xad \
	$(wildcard $(srcdir)/src/mkfb/*.c)

	@$(MKDIR) $(dir $@)
	@$(MKDIR) $(BINDIR)

	@echo $< ...

	@$(HOST_CC) \
		-g \
		-Isrc/include \
		-o $(BINDIR)/mkfb@EXEEXT@ \
		$(wildcard $(srcdir)/src/mkfb/*.c)

	@$(BINDIR)/mkfb@EXEEXT@ \
		-c $(srcdir)/src/core/X3270.xad \
		$@

locale/$(PACKAGE_NAME).pot: \
	$(foreach SRC, $(basename $(SOURCES)), $(POTDIR)/$(LIBNAME)/$(SRC).pot)

	@rm -f $@
	@$(MKDIR) $(dir $@)
	@$(MSGCAT) --sort-output $^ > $@

locale: \
	locale/$(PACKAGE_NAME).pot

	@$(MAKE) -C locale all

doc:
	@$(DOXYGEN) ./doxygen/doxyfile

#---[ Debug Targets ]--------------------------------------------------------------------

Debug: \
	$(BINDBG)/lib3270@EXEEXT@

$(BINDBG)/lib3270@EXEEXT@: \
	$(foreach SRC, $(basename $(TEST_SOURCES)), $(OBJDBG)/$(SRC).o) \
	$(BINDBG)/$(SONAME)

	@$(MKDIR) $(dir $@)
	@echo $< ...
	@$(LD) \
		-o $@ \
		$^ \
		-L$(BINDBG) \
		-Wl,-rpath,$(BINDBG) \
		$(LDFLAGS) \
		$(LIBS)

run: \
	$(BINDBG)/lib3270@EXEEXT@

ifeq ($(VALGRIND),no)

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(BINDBG)/lib3270@EXEEXT@

else
	@touch valgrind.suppression

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(VALGRIND) --leak-check=full --track-origins=yes --gen-suppressions=all --suppressions=valgrind.suppression \
			$(BINDBG)/lib3270@EXEEXT@
endif

$(BINDBG)/$(SONAME): \
	$(foreach SRC, $(basename $(SOURCES)), $(OBJDBG)/$(SRC).o)

	@$(MKDIR) $(dir $@)
	@echo $< ...
	@$(LD) \
		@DLL_LDFLAGS@ \
		-o $@ \
		-L$(BINDBG) \
		$(LDFLAGS) \
		$(foreach SRC, $(basename $(SOURCES)), $(OBJDBG)/$(SRC).o) \
		$(LIBS)

#---[ Clean Targets ]--------------------------------------------------------------------

clean: \
	cleanDebug \
	cleanRelease

	@rm -fr $(BUILDDIR)/.obj
	@rm -fr $(BUILDDIR)/.bin
	@rm -fr $(BUILDDIR)/.tmp
	@rm -fr $(POTDIR)/$(LIBNAME)
	@rm -f locale/*.pot

cleanDebug:

	@rm -fr $(OBJDBG)
	@rm -fr $(BINDBG)

cleanRelease:

	@rm -fr $(OBJRLS)
	@rm -fr $(BINRLS)
	@rm -fr $(POTDIR)
	@rm -f lib$(LIBNAME).pot

clean: \
	cleanDebug \
	cleanRelease

-include $(foreach SRC, $(basename $(SOURCES)), $(OBJDBG)/$(SRC).d)
-include $(foreach SRC, $(basename $(SOURCES)), $(OBJRLS)/$(SRC).d)

